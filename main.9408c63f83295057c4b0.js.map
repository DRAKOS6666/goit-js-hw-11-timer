{"version":3,"sources":["webpack:///./index.js"],"names":["CountdownTimer","obj","this","selector","targetDate","time","Date","parse","days","Math","floor","hours","mins","secs","refs","userDate","document","querySelector","day","hour","min","sec","timer","date","setInterval","textContent","value"],"mappings":"6SAEMA,E,WACJ,WAAYC,GACVC,KAAKC,SAAWF,EAAIE,SACpBD,KAAKE,WAAaH,EAAIG,W,oDAItB,IAAMC,EAAOC,KAAKC,MAAML,KAAKE,YAAc,IAAIE,KAM/C,MAAO,CACLE,KALWC,KAAKC,MAAML,EAAO,OAM7BM,MALYF,KAAKC,MAAOL,EAAO,MAAR,MAMvBO,KALWH,KAAKC,MAAOL,EAAO,KAAR,KAMtBQ,KALWJ,KAAKC,MAAOL,EAAO,IAAe,W,gCAU7CS,EAAO,CACXC,SAAUC,SAASC,cAAc,gCACjCC,IAAKF,SAASC,cAAc,2BAC5BE,KAAMH,SAASC,cAAc,4BAC7BG,IAAKJ,SAASC,cAAc,2BAC5BI,IAAKL,SAASC,cAAc,4BAGxBK,EAAQ,SAAAC,GAKZ,OAJiB,IAAIvB,EAAe,CAClCG,SAAU,WACVC,WAAYmB,KAYIC,aAAY,WAC9BV,EAAKI,IAAIO,YAAcH,EAAMR,EAAKC,SAASW,OAAOrB,KAAKG,KACvDM,EAAKK,KAAKM,YAAcH,EAAMR,EAAKC,SAASW,OAAOrB,KAAKM,MACxDG,EAAKM,IAAIK,YAAcH,EAAMR,EAAKC,SAASW,OAAOrB,KAAKO,KACvDE,EAAKO,IAAII,YAAcH,EAAMR,EAAKC,SAASW,OAAOrB,KAAKQ,OAItD,O","file":"main.9408c63f83295057c4b0.js","sourcesContent":["import './styles.css';\r\n\r\nclass CountdownTimer {\r\n  constructor(obj) {\r\n    this.selector = obj.selector;\r\n    this.targetDate = obj.targetDate;\r\n  }\r\n\r\n  get time() {\r\n    const time = Date.parse(this.targetDate) - new Date();\r\n\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n    return {\r\n      days,\r\n      hours,\r\n      mins,\r\n      secs,\r\n    };\r\n  }\r\n}\r\n\r\nconst refs = {\r\n  userDate: document.querySelector('input[type=\"datetime-local\"]'),\r\n  day: document.querySelector('span[data-value=\"days\"]'),\r\n  hour: document.querySelector('span[data-value=\"hours\"]'),\r\n  min: document.querySelector('span[data-value=\"mins\"]'),\r\n  sec: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n\r\nconst timer = date => {\r\n  const newTimer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: date,\r\n  });\r\n  return newTimer;\r\n};\r\n\r\n// refs.userDate.value = new Date().toISOString().slice(0, 16);\r\n\r\n// refs.userDate.addEventListener('change', () => {\r\n//   console.log(refs.userDate.value);\r\n//   console.dir(refs.userDate);\r\n// });\r\n\r\nconst countdowdID = setInterval(() => {\r\n  refs.day.textContent = timer(refs.userDate.value).time.days;\r\n  refs.hour.textContent = timer(refs.userDate.value).time.hours;\r\n  refs.min.textContent = timer(refs.userDate.value).time.mins;\r\n  refs.sec.textContent = timer(refs.userDate.value).time.secs;\r\n  //   refs.hour.textContent = timer.time.hours;\r\n  //   refs.min.textContent = timer.time.mins;\r\n  //   refs.sec.textContent = timer.time.secs;\r\n}, 1000);\r\n"],"sourceRoot":""}